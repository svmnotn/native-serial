/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class OpenPort {
  write(data: Uint8Array): void;
  onDataReceived(callback?: ((err: Error | null, arg: Buffer) => void) | undefined | null): void;
  onWriteError(callback?: ((err: Error | null, arg: Buffer) => void) | undefined | null): void;
  close(): void;
}

export declare class Port {
  get path(): string;
  get type(): string;
  get usbInfo(): UsbInfo | null;
  open(settings?: PortSettings | undefined | null): OpenPort;
}

export declare class UsbInfo {
  get vid(): number;
  get pid(): number;
  get serial(): string | null;
  get manufacturer(): string | null;
  get product(): string | null;
}

export declare const enum DataBits {
  Five = 0,
  Six = 1,
  Seven = 2,
  Eight = 3,
}

export declare const enum FlowControl {
  None = 0,
  Software = 1,
  Hardware = 2,
}

export declare function listPorts(): Array<Port>;

export declare const enum Parity {
  None = 0,
  Odd = 1,
  Even = 2,
}

export interface PortSettings {
  baudRate?: number;
  /** read timeout in ms */
  timeoutMs?: number;
  dataBits?: DataBits;
  parity?: Parity;
  stopBits?: StopBits;
  flowControl?: FlowControl;
}

export declare const enum StopBits {
  One = 0,
  Two = 1,
}
